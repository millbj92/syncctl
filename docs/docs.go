// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Brandon Miller",
            "email": "brandon@brandonmiller.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/millbj92/synctl/blob/master/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/disk/usage/": {
            "get": {
                "description": "Get a systems disk usage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disk"
                ],
                "summary": "Get a systems disk usage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/disk.DiskResponse"
                        }
                    }
                }
            }
        },
        "/v1/memory/": {
            "get": {
                "description": "Get a systems memory stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memory"
                ],
                "summary": "Get a systems memory stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/memory.AllMemoryResponse"
                        }
                    }
                }
            }
        },
        "/v1/tokens/renew/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Renew expired tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Renew expired tokens",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Renew"
                        }
                    }
                }
            }
        },
        "/v1/users/create/": {
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "First Name",
                        "name": "first_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Last Name",
                        "name": "last_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.Renew": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.User": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "id",
                "last_name",
                "password",
                "role"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "password": {
                    "type": "string",
                    "maxLength": 255
                },
                "role": {
                    "type": "string",
                    "default": "disabled",
                    "maxLength": 255
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "disk.DiskResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/disk.DiskUsage"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "disk.DiskUsage": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "fstype": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                },
                "usedPercent": {
                    "type": "number"
                }
            }
        },
        "memory.AllMemoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/memory.MemoryStats"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "memory.MemoryStats": {
            "type": "object",
            "properties": {
                "swapDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/memory.SwapDevice"
                    }
                },
                "swapMemory": {
                    "$ref": "#/definitions/memory.SwapMemory"
                },
                "virtualMemory": {
                    "$ref": "#/definitions/memory.VirtualMemory"
                }
            }
        },
        "memory.SwapDevice": {
            "type": "object",
            "properties": {
                "freeBytes": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "usedBytes": {
                    "type": "integer"
                }
            }
        },
        "memory.SwapMemory": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                },
                "usedPercent": {
                    "type": "number"
                }
            }
        },
        "memory.VirtualMemory": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                },
                "usedPercent": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Synctl Server",
	Description:      "The Synctl Server is meant to act as a bridge between the\nnodes in a synctl cluster. It will be used to sync files\nbetween nodes, schedule remote nodes for self cleanup, and\nperform other general housekeeping tasks.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
